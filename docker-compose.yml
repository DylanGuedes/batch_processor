version: '2.1'

services:
  data-processor:
    container_name: 'data-processor'
    build: .
    ports:
      - 4545:4545
    volumes:
      - ./:/opt/app
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./lib/:/opt/app/lib
      # - ./config/:/opt/app/config
      # - ./priv:/opt/app/priv
      # - ./scripts:/opt/app/scripts
      # - ./spark_jobs:/opt/app/spark_jobs
      # - ./test:/opt/app/test
      # - ./mix.exs:/opt/app/mix.exs
      # - ./mix.lock:/opt/app/mix.lock
      # - ./cover:/opt/app/cover
    environment:
      TEST_DB: "db"
      DB_HOST: "db"
      DB_PORT: 5432

  db:
    container_name: db
    image: 'postgres:10'

  master:
    image: 'gettyimages/spark'
    command: /scripts/spark_master
    container_name: "master"
    hostname: master
    environment:
      MASTER: spark://master:7077
      SPARK_CONF_DIR: /conf
      SPARK_PUBLIC_DNS: localhost
      PYSPARK_DRIVER_PYTHON: "ipython"
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7006
      - 7077
      - 6066
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 9999:9999
      - 18080:18080
    volumes:
      - ./conf/master:/conf
      - ./data:/tmp/data
      - ./spark_jobs:/jobs
      - ./scripts:/scripts

  worker:
    image: gettyimages/spark
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://master:7077
    hostname: worker
    environment:
      SPARK_CONF_DIR: /conf
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
      SPARK_PUBLIC_DNS: localhost
    links:
      - master
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 7016
      - 8881
    ports:
      - 8081:8081
    volumes:
      - ./conf/worker:/conf
      - ./data:/tmp/data

  kafka:
    container_name: kafka
    image: 'spotify/kafka'
    ports:
      - 9092:9092
      - 2181:2181
    environment:
      ADVERTISED_HOST: 172.17.0.1

  hadoop:
    container_name: "hadoop"
    image: sequenceiq/hadoop-docker
    ports:
      - "8020:8020"
      - "50070:50070"
      - "50010:50010"
      - "9000:9000"

networks:
  default:
    external:
      name: platform
